----------------------------
Connect to Realsense Camera
----------------------------
# Intel Realsense D435i
roslaunch neptune_ros rs_d435i.launch

------------
PX4 Offboard
------------
# Connect to PX4 Autopilot
roslaunch neptune_ros connect_px4.launch

# Connect to PX4 Autopilot (Simulation-in-the-loop)
cd ~/Github/PX4-Autopilot
make px4_sitl_default gazebo
roslaunch neptune_ros connect_sitl.launch

# Connect to PX4 Autopilot (Hardware-in-the-loop)
cd ~/Github/PX4-Autopilot
DONT_RUN=1 make px4_sitl_default gazebo
source Tools/setup_gazebo.bash $(pwd) $(pwd)/build/px4_sitl_default
gazebo Tools/sitl_gazebo/worlds/hitl_iris.world
roslaunch neptune_ros connect_hitl.launch

# Start Offboard node (need to be running before entering Offboard mode!)
rosrun px4_offboard forward_flight

# Use the RC CH7 to switch to Offboard Mode

---------------
Data Collection
---------------

----
SLAM
----
# Mapping
roslaunch neptune_ros rs_d435i.launch

# # IMU filter
# roslaunch neptune_ros camera_process.launch

# Run rtabmap (Mapping)
roslaunch neptune_ros run_rtabmap.launch

# rosbag
rosbag record /d435i/infra1/image_rect_raw \
/d435i/infra1/camera_info \
/d435i/infra2/image_rect_raw \
/d435i/infra2/camera_info \
/d435i/imu \
/tf \
-o /media/peng/Samsung/d435i

---------
TensorRT
---------
# Convert pytorch model to tensorrt model
cd ./script/tensorrt
python3 pytorch_to_trt.python3

# Check the runtime performance
python3 runtime_compare.py